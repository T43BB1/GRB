# Okay
- name: checklist 1
  hosts: intranetweb
  
  tasks:
  # header
  - set_fact:
      diag: node 프로세스 권한 점검
      num: 1
  - debug:
      var: diag
  - debug:
      var: num

  # body1
  - name: 프로세스 권한 점검 
    shell: docker exec -i expressgrb bash -c "ps -ef | grep node | grep -v grep"
    register: process_permission_check
    ignore_errors: yes

  - name: Install procps if ps command not found
    shell: docker exec -i expressgrb bash -c "apt-get update && apt-get install -y procps"
    when: "'ps: command not found' in process_permission_check.stderr"
    register: procps_install

  - name: Re-run 프로세스 권한 점검 after installing procps
    shell: docker exec -i expressgrb bash -c "ps -ef | grep node | grep -v grep"
    when: procps_install is changed
    register: process_permission_check_after_install

  - debug: 
      msg: "{{process_permission_check_after_install.stdout_lines if procps_install is changed else process_permission_check.stdout_lines}}"

  # set weak1
  - set_fact:
      weak1: "{{ (process_permission_check.stdout is defined and 'root' in process_permission_check.stdout) or (process_permission_check_after_install.stdout is defined and 'root' in process_permission_check_after_install.stdout) }}"
  - debug:
      var: weak1

  # body2
  - name: check production mode 
    shell: docker exec -i expressgrb bash -c "grep 'process.env.NODE_ENV' current/core/app.js || true"     
    register: node_env_check

  - name: Check NODE_ENV if grep did not find anything
    shell: docker exec -i expressgrb bash -c "echo \$NODE_ENV"
    when: node_env_check.stdout == ""
    register: node_env_recheck

  - debug:
        msg: "{{ node_env_recheck.stdout_lines }}"
  # set weak2
  - set_fact:
        weak2: "{{ (node_env_check.stdout is defined and 'development' in node_env_check.stdout) or (node_env_recheck.stdout is defined and 'development' in node_env_recheck.stdout) }}"
  - debug:
        var: weak2

  # result

  - block:
      - debug:
          msg: 해당없음
      - set_fact:
          result: "{{{'num': num, 'diag': diag, 'weak': none, 'reason': ['N/A']}}}"
      - copy:
          content: "{{ result }}"
          dest: /home/ubuntu/grbprj/log/nodejs/diag/1.json
        delegate_to: localhost
    when: weak1 is none and weak2 is none 

  - block:
      - debug:
          msg: 취약
      - set_fact:
          result: "{{{'num': num, 'diag': diag, 'weak': True, 'reason': ['Node application is running as root'], 'bypass': [{'weak_status': weak1}], 'how_action': ['Action will change the node process to run as non-root. Do you want to proceed?']} }}"
      - copy:
          content: "{{ result }}"
          dest: /home/ubuntu/grbprj/log/nodejs/diag/1.json
        delegate_to: localhost
    when: weak1 is not none and weak1

  - block:
      - debug:
          msg: 취약
      - set_fact:
          result: "{{{'num': num, 'diag': diag, 'weak': True, 'reason': ['Node application is not in production mode'], 'bypass': [{'weak_status': weak2}], 'how_action': ['Action will set the node application to production mode. Do you want to proceed?']}}}"
      - copy:
          content: "{{ result }}"
          dest: /home/ubuntu/grbprj/log/nodejs/diag/1.json
        delegate_to: localhost
    when: weak2 is not none and weak2

  - block:
      - debug:
          msg: 취약
      - set_fact:
          result: "{{{'num': num, 'diag': diag, 'weak': True, 'reason': ['Node application is running as root and not in production mode'], 'bypass': [{'weak_status': weak}], 'how_action': ['Action will change the node process to run as non-root and set to production mode. Do you want to proceed?']}}}"
      - copy:
          content: "{{ result }}"
          dest: /home/ubuntu/grbprj/log/nodejs/diag/1.json
        delegate_to: localhost
    when: weak1 is not none and weak1 and weak2 is not none and weak2

  - block:
      - debug:
          msg: 양호
      - set_fact:
          result: "{{{'num': num, 'diag': diag, 'weak': False, 'reason': ['Node application is not running as root and is in production mode']} }}"
      - copy:
          content: "{{ result }}"
          dest: /home/ubuntu/grbprj/log/nodejs/diag/1.json
        delegate_to: localhost
    when: weak1 is not none and not weak1 and weak2 is not none and not weak2

  - debug:
        msg: "{{result}}"